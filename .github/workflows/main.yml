name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build frontend
      run: |
        mkdir dist
        cp index.html ./dist/index.html
        cp -r ./Apis_And_Microservices_Certification ./dist/Apis_And_Microservices_Certification
        cp -r ./Back_End_Development_Certification ./dist/Back_End_Development_Certification
        cp -r ./Front_End_Development_Certification ./dist/Front_End_Development_Certification
        cp -r ./Front_End_Libraries_Certification ./dist/Front_End_Libraries_Certification
        cp -r ./Projects_Website ./dist/Projects_Website
        cp -r ./Responsive_Web_Design_Certification ./dist/Responsive_Web_Design_Certification
    - name: Deploy Frontend to Github Pages
      if: success()
      uses: crazy-max/ghaction-github-pages@v1.4.0
      with:
        build_dir: dist
      env:
        GITHUB_PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  backend:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - name: Install Heroku CLI
        run: npm install -g heroku
      - name: Login to Heroku CLI
        run: |
          cat >~/.netrc <<EOF
          machine api.heroku.com
              login ${HEROKU_EMAIL}
              password ${HEROKU_API_TOKEN}
          machine git.heroku.com
              login ${HEROKU_EMAIL}
              password ${HEROKU_API_TOKEN}
          EOF
          heroku login
        env:
          HEROKU_API_TOKEN: ${{secrets.HEROKU_API_TOKEN}}
          HEROKU_EMAIL: ${{secrets.HEROKU_EMAIL}}
      - name: Deploy to Heroku
        run: |
          heroku git::remote -a jm-voting-app
          git subtree push --prefix=Back_End_Development_Certification/Voting_App heroku master
